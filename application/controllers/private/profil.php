<?php    class Profil extends MY_Controller {                function  __construct() {            // load application base            parent::__construct();            $this->PrivateAppBase();            $this->load->library('image_lib');        }        public        function index() {            // template content            $this->smarty->assign("template_content", "private/profil/list");            // load            $this->load->model('profilmodel');            $this->load->library('notification');            $this->layout->load_javascript("js/admin/plugins/datatables/jquery.dataTables.js");            $this->layout->load_javascript("js/admin/plugins/datatables/dataTables.bootstrap.js");            // get data            $data = $this->profilmodel->get_list_profil();            $this->smarty->assign("data", $data);                       $this->smarty->assign("no", 1);            // parse url            $this->smarty->assign('url_add', site_url('private/profil/add'));            $this->smarty->assign('url_list', site_url('private/profil/index'));            $this->smarty->assign('url_edit', site_url('private/profil/edit'));            $this->smarty->assign('url_delete', site_url('private/profil/hapus'));            // notification            $arr_notify = $this->notification->get_notification();            // notification            $this->smarty->assign("notification_msg", $arr_notify['message']);            $this->smarty->assign("notification_status", (empty($arr_notify['message_status'])?'red':            'green'));            // display document            $this->parser->parse( 'private/base-layout/document.html');        }        // switcher        public        function process($action) {            switch($action) {                case 'add':                    $this->process_add();                    break;                case 'edit':                    $this->process_edit();                    break;                case 'hapus':                    $this->process_hapus();                    break;                default :                    // default redirect                    redirect('private/profil/add');                    break;            }    }    public    function add() {        // template content        $this->smarty->assign("template_content", "private/profil/add");        //load        $this->load->library('notification');        //$this->layout->load_javascript("js/tinymce/tiny_mce.js");                // url        $this->smarty->assign("url_add", site_url("private/profil/add"));        $this->smarty->assign("url_list", site_url("private/profil"));        $this->smarty->assign("url_process", site_url("private/profil/process/add"));        // notification        $arr_notify = $this->notification->get_notification();                if(!empty($arr_notify['post'])) {            $this->smarty->assign("data", $arr_notify['post']);        }        // notification        $this->smarty->assign("notification_msg", $arr_notify['message']);        $this->smarty->assign("notification_status", (empty($arr_notify['message_status'])?'red':        'green'));        // display document        $this->parser->parse( 'private/base-layout/document.html');    }    public    function process_add() {        // load library        $this->load->model('profilmodel');        $this->load->library('notification');        $this->load->library('uploader');        // set rules        $this->notification->check_post('nama', 'Nama', 'required');        $this->notification->check_post('jabatan', 'Jabatan', 'required');        $this->notification->check_post('content', 'Konten', 'required');        $this->notification->check_post('deskripsi', 'Deskripsi', 'required');        $this->notification->check_post('pendidikan', 'Pendidikan', 'required');        $this->notification->check_post('riwayat', 'Riwayat', 'required');        $this->notification->check_post('penghargaan', 'Penghargaan', 'required');        $this->notification->check_post('order_num', 'Urutan', 'required');        // run                if ($this->notification->valid_input()) {            // params            $params = array('nama' => $this->input->post('nama'),                'jabatan' => $this->input->post('jabatan'),                                    'content' => $this->input->post('content'),                'deskripsi' => $this->input->post('deskripsi'),                'pendidikan' => $this->input->post('pendidikan'),                'riwayat' => $this->input->post('riwayat'),                'penghargaan' => $this->input->post('penghargaan'),                                    'order_num' => $this->input->post('order_num'));            // execute                        if($this->profilmodel->process_profil_add($params)) {                 $id_profil = $this->db->insert_id();                if (!empty($_FILES['foto']['tmp_name'])) {                   // set rules (kosongkan jika tidak menggunakan batasan sama sekali)                   $config['upload_path']  = "doc/profil/" . $id_profil . '/';                   $config['allowed_types']= 'gif|jpg|png|jpeg';                   $config['max_size'] = '4000';                                      $config['file_name'] = $id_profil.'_'.$_FILES['foto']['name'];                    if(!is_dir($config['upload_path'])):                    mkdir($config['upload_path']);                    endif;                   $this->load->library('upload', $config);                    // proses upload                    if ($this->upload->do_upload("foto")) {                    $id_album = $this->db->insert_id();                       $data       = $this->upload->data();                        $foto = $data['file_name'];                        //resize                         $config['image_library'] = 'gd2';                        $config['source_image']  = "doc/profil/".$id_profil.'/'.$foto;                        $config['source_image']  = "doc/profil/".$id_profil.'/'.$foto;                                               $config['width']     = '772';                        $config['height']   = '514';                                                $this->image_lib->initialize($config);                                                                         $this->image_lib->resize();                        $this->db->set("foto",$foto);                        $this->db->where("id_info", $id_profil);                        $this->db->update("profil_m");                    } else {                        //echo $this->upload->message;                        $this->notification->set_message("File Gambar gagal diupload, file gambar tidak memenuhi kriteria");                        $this->notification->sent_notification(false);                                           }                }                $this->notification->clear_post();                $this->notification->set_message("Data berhasil disimpan");                $this->notification->sent_notification(true);                redirect('private/profil/add');            } else {                $this->notification->set_message("Data gagal disimpan");                $this->notification->sent_notification(false);            }        } else {            $this->notification->sent_notification(false);        }        // default redirect        redirect('private/profil/add');    }    public    function edit() {        // template content        $this->smarty->assign("template_content", "private/profil/edit");        // load        $this->load->model('profilmodel');        $this->load->library('notification');        // parse url        $this->smarty->assign("url_add", site_url("private/profil/add"));        $this->smarty->assign("url_list", site_url("private/profil"));        $this->smarty->assign("url_process", site_url("private/profil/process/edit"));        // data        $id_info = $this->uri->segment(4, 0);        $data = $this->profilmodel->get_profil_by_id($id_info);                  $this->smarty->assign("data", $data);                // notification        $arr_notify = $this->notification->get_notification();                if(!empty($arr_notify['post'])) {            $this->smarty->assign("data", $arr_notify['post']);        }        /// GET DATA foto        $id_profil = $this->uri->segment(4, 0);        $data = $this->profilmodel->get_profil_by_id($id_profil);        $path = 'doc/profil/'.$id_profil."/";                if(is_file($path.$data['foto'])){            $data['foto'] = '<img src="'.BASEURL.$path.$data['foto'].'" border="0" height="200px">';        } else {            $data['foto']= '-tidak ada gambar- ';        }        $this->smarty->assign("foto", $data['foto']);        // notification        $this->smarty->assign("notification_msg", $arr_notify['message']);        $this->smarty->assign("notification_status", (empty($arr_notify['message_status'])?'red':        'green'));        // display document        $this->parser->parse( 'private/base-layout/document.html');    }    public    function process_edit() {        // load library        $this->load->model('profilmodel');        $this->load->library('notification');        $this->load->library('uploader');         // set rules        $this->notification->check_post('nama', 'Nama', 'required');        $this->notification->check_post('jabatan', 'Jabatan', 'required');        $this->notification->check_post('content', 'Konten', 'required');        $this->notification->check_post('deskripsi', 'Deskripsi', 'required');        $this->notification->check_post('pendidikan', 'Pendidikan', 'required');        $this->notification->check_post('riwayat', 'Riwayat', 'required');        $this->notification->check_post('penghargaan', 'Penghargaan', 'required');        $this->notification->check_post('order_num', 'Urutan', 'required');        // run                if ($this->notification->valid_input()) {            // params             $params = array('nama' => $this->input->post('nama'),                'jabatan' => $this->input->post('jabatan'),                                    'content' => $this->input->post('content'),                'deskripsi' => $this->input->post('deskripsi'),                'pendidikan' => $this->input->post('pendidikan'),                'riwayat' => $this->input->post('riwayat'),                'penghargaan' => $this->input->post('penghargaan'),                                    'order_num' => $this->input->post('order_num'),                'id_profil' => $this->input->post('id_profil'));            // execute                        if($this->profilmodel->process_profil_edit($params)) {                 $id_profil = $this->input->post('id_profil');                if (!empty($_FILES['foto']['tmp_name'])) {                     $this->uploader->remove_dir('doc/profil/' . $id_profil . '/');                   // set rules (kosongkan jika tidak menggunakan batasan sama sekali)                   $config['upload_path']  = "doc/profil/" . $id_profil . '/';                   $config['allowed_types']= 'gif|jpg|png|jpeg';                   $config['max_size'] = '4000';                                      $config['file_name'] = $id_profil.'_'.$_FILES['foto']['name'];                    if(!is_dir($config['upload_path'])):                    mkdir($config['upload_path']);                    endif;                                      $this->load->library('upload', $config);                    // proses upload                    if ($this->upload->do_upload("foto")) {                    $id_album = $this->db->insert_id();                       $data       = $this->upload->data();                        $foto = $data['file_name'];                        //resize                         $config['image_library'] = 'gd2';                        $config['source_image']  = "doc/profil/".$id_profil.'/'.$foto;                        $config['source_image']  = "doc/profil/".$id_profil.'/'.$foto;                                               $config['width']     = '772';                        $config['height']   = '514';                                                $this->image_lib->initialize($config);                                                                         $this->image_lib->resize();                        $this->db->set("foto",$foto);                        $this->db->where("id_info", $id_profil);                        $this->db->update("profil_m");                    } else {                        //echo $this->upload->message;                        $this->notification->set_message("File Gambar gagal diupload, file gambar tidak memenuhi kriteria");                        $this->notification->sent_notification(false);                                           }                }                $this->notification->clear_post();                $this->notification->set_message("Data berhasil disimpan");                $this->notification->sent_notification(true);                redirect('private/profil/edit/'.$this->input->post('id_profil'));            } else {                $this->notification->set_message("Data gagal disimpan");                $this->notification->sent_notification(false);            }        } else {            $this->notification->sent_notification(false);        }        // default redirect        redirect('private/profil/edit/'.$this->input->post('id_profil'));    }    public    function hapus() {        // template content        $this->smarty->assign("template_content", "private/profil/hapus");        // load        $this->load->model('profilmodel');        $this->load->library('notification');        // parse url        $this->smarty->assign("url_add", site_url("private/profil/add"));        $this->smarty->assign("url_list", site_url("private/profil"));        $this->smarty->assign("url_process", site_url("private/profil/process/hapus"));        // data        $id_info = $this->uri->segment(4, 0);        $data = $this->profilmodel->get_profil_by_id($id_info);        $this->smarty->assign("data", $data);        // notification        $arr_notify = $this->notification->get_notification();        $this->smarty->assign("notification_msg", $arr_notify['message']);        $this->smarty->assign("notification_status", (empty($arr_notify['message_status'])?'red':        'green'));        // display document        $this->parser->parse( 'private/base-layout/document.html');    }    public    function process_hapus() {        // load library        $this->load->library('notification');        $this->load->model('profilmodel');        // set rules        $this->notification->check_post('id_info', 'Group', 'required');        // run                if ($this->notification->valid_input()) {            // params            $params = $this->input->post('id_info');            // execute                        if($this->profilmodel->process_profil_delete($params)) {                $this->notification->clear_post();                $this->notification->set_message("Data berhasil dihapus");                $this->notification->sent_notification(true);                // redirect                redirect('private/profil');            } else {                $this->notification->set_message("Data gagal dihapus");                $this->notification->sent_notification(false);            }        }        // default redirect        redirect('private/profil/hapus/'.$this->input->post('id_info'));    }}