<?php    class Profesi extends MY_Controller {                function  __construct() {            // load application base            parent::__construct();            $this->PrivateAppBase();        }        public        function index() {            // template content            $this->smarty->assign("template_content", "private/profesi/list");            // your code here            $this->load->library('pagination');            $this->load->model('profesimodel');            $this->load->library('notification');            $this->layout->load_javascript("js/admin/plugins/datatables/jquery.dataTables.js");            $this->layout->load_javascript("js/admin/plugins/datatables/dataTables.bootstrap.js");            //$this->smarty->assign("negara", $datanegara);            $data = $this->profesimodel->get_all_profesi();            $this->smarty->assign("profesi", $data);            $this->smarty->assign("no",1);            // notification            $arr_notify = $this->notification->get_notification();            $this->smarty->assign("notification_msg", $arr_notify['message']);            $notification_status = (empty($arr_notify['message_status'])?'red':            'green');            $this->smarty->assign("notification_status", $notification_status);            // parse url            $this->smarty->assign('url_add', site_url('private/profesi/add'));            $this->smarty->assign('url_list', site_url('private/profesi/index'));            $this->smarty->assign('url_edit', site_url('private/profesi/edit'));            $this->smarty->assign('url_delete', site_url('private/profesi/hapus'));            $this->smarty->assign('url_process', site_url('private/profesi/process/hapus'));            // display document            $this->parser->parse( 'private/base-layout/document.html');        }        public        function process($action) {            switch($action) {                case 'add':                    $this->process_add();                    break;                case 'edit':                    $this->process_edit();                    break;                case 'hapus':                    $this->process_hapus();                    break;                default :                    // default redirect                    redirect('private/profesi/add');                    break;            }    }    public    function add() {        // template content        $this->smarty->assign("template_content", "private/profesi/profesi-add");        //load        $this->load->model('negaramodel');        $this->load->model('profesimodel');        $this->load->library('notification');        // url        $this->smarty->assign("url_add", site_url("private/profesi/add"));        $this->smarty->assign("url_list", site_url("private/profesi"));        $this->smarty->assign("url_process", site_url("private/profesi/process/add"));        // --        $this->smarty->assign("active_add", 'class="tab-nav-active"');        // notification        $datanegara = $this->negaramodel->get_all_negara();        $arr_notify = $this->notification->get_notification();                if(!empty($arr_notify['post'])) {            $this->smarty->assign("data", $arr_notify['post']);        }         $id_profesi = $this->profesimodel->get_max_kode_profesi();        $this->smarty->assign('id_profesi',$id_profesi);        // notification        $this->smarty->assign("notification_msg", $arr_notify['message']);        $this->smarty->assign("notification_status", (empty($arr_notify['message_status'])?'red':        'green'));        // display document        $this->parser->parse( 'private/base-layout/document.html');    }    public    function process_add() {        // load library        $this->load->model('profesimodel');        $this->load->library('notification');        // set rules        $this->notification->check_post('nama_profesi', 'Nama Profesi', 'required');        $profesi = $this->input->post('nama_profesi');        // run                if ($this->notification->valid_input()) {                        if($this->profesimodel->is_exists_profesi(strtolower($profesi))) {                $this->notification->set_message('Nama Profesi sudah ada');                $this->notification->clear_post();            }        }                if ($this->notification->valid_input()) {            // params            $params = array( $this->input->post('id_profesi'),$this->input->post('nama_profesi'));            // processing                        if($this->profesimodel->process_profesi_add($params)) {                               $this->notification->clear_post();                $this->notification->set_message("Data berhasil disimpan");                $this->notification->sent_notification(true);            } else {                $this->notification->set_message("Data gagal disimpan");                $this->notification->sent_notification(false);            }        } else {            $this->notification->sent_notification(false);        }        // default redirect        redirect('private/profesi/add');    }    public    function edit() {        // template content        $this->smarty->assign("template_content", "private/profesi/profesi-edit");        // load        $this->load->model('profesimodel');        $this->load->library('notification');        // url        $this->smarty->assign("url_add", site_url("private/profesi/add"));        $this->smarty->assign("url_list", site_url("private/profesi"));        $this->smarty->assign("url_process", site_url("private/profesi/process/edit"));        // data        $id_profesi = $this->uri->segment(4);        $data = $this->profesimodel->get_profesi_by_id($id_profesi);        $this->smarty->assign("data", $data);        // notification        $arr_notify = $this->notification->get_notification();                if(!empty($arr_notify['post'])) {            $this->smarty->assign("data", $arr_notify['post']);        }        // notification        $this->smarty->assign("notification_msg", $arr_notify['message']);        $this->smarty->assign("notification_status", (empty($arr_notify['message_status'])?'red':        'green'));        // display document        $this->parser->parse( 'private/base-layout/document.html');    }    public    function process_edit() {        // load library        $this->load->model('profesimodel');        $this->load->library('notification');        // set rules        $this->notification->check_post('nama_profesi', 'Nama Profesi', 'required');        $profesi = $this->input->post('nama_profesi');        // run                if ($this->notification->valid_input()) {                        if($this->profesimodel->is_exists_profesi_edit(strtolower($profesi)))  {                $this->notification->set_message('Nama Profesi sudah ada');                $this->notification->clear_post();            }        }                if ($this->notification->valid_input()) {            // params            $params = array($this->input->post('nama_profesi'), $this->input->post('id_profesi'));            // processing                        if($this->profesimodel->process_profesi_edit($params)) {                              $this->notification->clear_post();                $this->notification->set_message("Data berhasil disimpan");                $this->notification->sent_notification(true);            } else {                $this->notification->set_message("Data gagal disimpan");                $this->notification->sent_notification(false);            }        } else {            $this->notification->sent_notification(false);        }        // default redirect        redirect('private/profesi/edit/'.$this->input->post('id_profesi'));    }    public    function hapus() {        // template content        $this->smarty->assign("template_content", "private/profesi/profesi-hapus");        // load        $this->load->model('profesimodel');        $this->load->library('notification');        // url        $this->smarty->assign("url_add", site_url("private/profesi/add"));        $this->smarty->assign("url_list", site_url("private/profesi"));        $this->smarty->assign("url_process", site_url("private/profesi/process/hapus"));        // data        $id_profesi = $this->uri->segment(4);        $data = $this->profesimodel->get_profesi_by_id($id_profesi);        $this->smarty->assign("data", $data);        // notification        $arr_notify = $this->notification->get_notification();                if(!empty($arr_notify['post'])) {            $this->smarty->assign("data", $arr_notify['post']);        }        // notification        $this->smarty->assign("notification_msg", $arr_notify['message']);        $this->smarty->assign("notification_status", (empty($arr_notify['message_status'])?'red':        'green'));        // display document        $this->parser->parse( 'private/base-layout/document.html');    }    public    function process_hapus() {        // load library        $this->load->library('notification');        $this->load->model('profesimodel');        // set rules        $this->notification->check_post('id_profesi', 'ID profesi', 'required');        // run        $id = $this->input->post('id_profesi');                if ($this->notification->valid_input()) {            $data = $this->profesimodel->get_profesi_by_id($id);                        if($this->profesimodel->process_profesi_delete_one($id)) {                $this->notification->clear_post();                $this->notification->set_message(count($id).' Data berhasil dihapus');                $this->notification->sent_notification(true);            } else {                $this->notification->set_message("Data gagal dihapus");                $this->notification->sent_notification(false);            }        } else {            $this->notification->sent_notification(false);        }        // default redirect        redirect('private/profesi');    }}