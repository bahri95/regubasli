<?php         if (!defined('BASEPATH')) exit('No direct script access allowed');    class Kelurahanmodel extends CI_Model {                function  __construct() {            // Call the Model constructor            parent::__construct();        }                function get_all_kecamatan() {            $sql = "SELECT * FROM kecamatan";            $query = $this->db->query($sql);                        if ($query->num_rows() > 0) {                $result = $query->result_array();                $query->free_result();                return $result;            } else {                return false;            }        }                function is_exists_kelurahan($kelurahan) {            $id = $this->input->post('id_kecamatan');            $sql = "SELECT COUNT(*)'total' FROM kelurahan WHERE LOWER(nama) = ?  and id = $id";            $query = $this->db->query($sql, array($kelurahan));            $result = $query->row_array();            $query->free_result();                        if (isset($result['total']) AND !empty($result['total'])) {                return true;            } else {                return false;            }        }                function get_max_kode_kelurahan() {            $sql = "SELECT (MAX(id)+1)'max_id' FROM kelurahan";            $query = $this->db->query($sql);                        if ($query->num_rows() > 0) {                $result = $query->result_array();                $query->free_result();                return $result;            } else {                return false;            }        }                function get_total_kelurahan($id = '') {            $params = array($id);                        if(!empty($id))                            $sql = "SELECT COUNT(*)'total' FROM kelurahan WHERE id = ?"; else            $sql = "SELECT COUNT(*)'total' FROM kelurahan";            $query = $this->db->query($sql, $params);                        if ($query->num_rows() > 0) {                $result = $query->row_array();                $return = $result["total"];                $query->free_result();                return $return;            } else {                return 0;            }        }                function get_all_kelurahan() {            $sql = "SELECT COUNT(*)'total' FROM kelurahan";            $query = $this->db->query($sql);                        if ($query->num_rows() > 0) {                $result = $query->result_array();                $query->free_result();                return $result;            } else {                return false;            }        }                function get_data_kelurahan($id = '', $limit) {                        if(!empty($id)) {                $params  = array_merge(array($id), $limit);                $sql = "SELECT a.*, c.nama as nama_kecamatan FROM kelurahan a                    INNER JOIN kecamatan c ON a.id_kecamatan = c.id                    WHERE c.id = ?                    ORDER BY a.nama ASC LIMIT ?, ?";            } else {                $params  = $limit;                $sql = "SELECT a.*, c.nama as nama_kecamatan FROM kelurahan a                    INNER JOIN kecamatan c ON a.id_kecamatan = c.id                                        ORDER BY a.nama ASC LIMIT ?, ?";            }            $query = $this->db->query($sql, $params);                        if ($query->num_rows() > 0) {                $result = $query->result_array();                $query->free_result();                return $result;            } else {                return false;            }        }                function get_data_kelurahan_all($id = '') {                        if(!empty($id)) {                $params  = array_merge(array($id));                $sql = "SELECT a.*, c.nama as nama_kecamatan FROM kelurahan a                    INNER JOIN kecamatan c ON a.id_kecamatan = c.id                    WHERE c.id = ?                    ORDER BY a.nama  ASC ";                $query = $this->db->query($sql, $params);            } else {                $sql = "SELECT a.* , c.nama as nama_kecamatan FROM kelurahan a                    INNER JOIN kecamatan c ON a.id_kecamatan = c.id                    ORDER BY a.nama ASC ";                $query = $this->db->query($sql);            }                        if ($query->num_rows() > 0) {                $result = $query->result_array();                $query->free_result();                return $result;            } else {                return false;            }        }                function get_kelurahan_by_id($id) {            $query = $this->db->where(array('id' => $id));            $query = $this->db->get('kelurahan');                        if ($query->num_rows() > 0) {                $result = $query->row_array();                $query->free_result();                return $result;            } else {                return false;            }        }                function process_kelurahan_add($params) {            // insert into kelurahan            $sql = "INSERT INTO kelurahan (id, id_kecamatan, nama)                VALUES (?, ?, ?)";            return $this->db->query($sql, $params);        }                function process_kelurahan_edit($params) {            // update into kelurahan            $sql = "UPDATE kelurahan SET id_kecamatan = ?, nama = ?                WHERE id = ?";            return $this->db->query($sql, $params);        }                function process_kelurahan_delete($id) {                        if(!empty($id)) {                foreach($id as $value) {                    $this->db->where('id', $value);                    $this->db->delete('kelurahan');                }            }            return true;        }                function process_kelurahan_delete_one($id) {                        if(!empty($id)) {                $this->db->where('id', $id);                $this->db->delete('kelurahan');            }            return true;        }    }